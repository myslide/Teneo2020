/**
 * <copyright>
 * </copyright>
 *
 * $Id: PAnnotatedETypedElementValidator.java,v 1.2 2009/12/13 10:14:11 mtaal Exp $
 */
package org.eclipse.emf.teneo.annotations.pamodel.validation;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.teneo.annotations.pannotation.AttributeOverride;
import org.eclipse.emf.teneo.annotations.pannotation.Column;
import org.eclipse.emf.teneo.annotations.pannotation.JoinColumn;
import org.eclipse.emf.teneo.annotations.pannotation.JoinTable;
import org.eclipse.emf.teneo.annotations.pannotation.OneToMany;
import org.eclipse.emf.teneo.annotations.pannotation.SequenceGenerator;
import org.eclipse.emf.teneo.annotations.pannotation.TableGenerator;

/**
 * A sample validator interface for
 * {@link org.eclipse.emf.teneo.annotations.pamodel.PAnnotatedETypedElement}. This doesn't really do
 * anything, and it's not a real EMF artifact. It was generated by the
 * org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can
 * be extended. This can be disabled with -vmargs
 * -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface PAnnotatedETypedElementValidator {
	boolean validate();

	boolean validateAttributeOverrides(EList<AttributeOverride> value);

	boolean validateJoinTable(JoinTable value);

	boolean validateOneToMany(OneToMany value);

	boolean validateSequenceGenerator(SequenceGenerator value);

	boolean validateTableGenerators(EList<TableGenerator> value);

	boolean validateJoinColumns(EList<JoinColumn> value);

	boolean validateColumn(Column value);
}
